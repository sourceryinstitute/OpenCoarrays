# -*- mode: ruby -*-
# vi: set ft=ruby :
VAGRANT_COMMAND = ARGV[0]

# All Vagrant configuration is done below. The "2" in Vagrant.configure
# configures the configuration version (we support older styles for
# backwards compatibility). Please don't change it unless you know what
# you're doing.
Vagrant.configure(2) do |config|
  # The most common configuration options are documented and commented below.
  # For a complete reference, please see the online documentation at
  # https://docs.vagrantup.com.

  # Every Vagrant development environment requires a box. You can search for
  # boxes at https://atlas.hashicorp.com/search.
  config.vm.box = "hashicorp/precise64"

  # Disable automatic box update checking. If you disable this, then
  # boxes will only be checked for updates when the user runs
  # `vagrant box outdated`. This is not recommended.
  config.vm.box_check_update = true

  # Create a forwarded port mapping which allows access to a specific port
  # within the machine from a port on the host machine. In the example below,
  # accessing "localhost:8080" will access port 80 on the guest machine.
  # config.vm.network "forwarded_port", guest: 80, host: 8080

  # Create a private network, which allows host-only access to the machine
  # using a specific IP.
  # config.vm.network "private_network", ip: "192.168.33.10"

  # Create a public network, which generally matched to bridged network.
  # Bridged networks make the machine appear as another physical device on
  # your network.
  # config.vm.network "public_network"

  # Share an additional folder to the guest VM. The first argument is
  # the path on the host to the actual folder. The second argument is
  # the path on the guest to mount the folder. And the optional third
  # argument is a set of non-required options.
  config.vm.synced_folder "..", "/home/travis/build/sourceryinstitute/opencoarrays", mount_options: ["dmode=2770", "fmode=660"]


  # Provider-specific configuration so you can fine-tune various
  # backing providers for Vagrant. These expose provider-specific options.
  # Example for VirtualBox:
  #
  # config.vm.provider "virtualbox" do |vb|
  #   # Display the VirtualBox GUI when booting the machine
  #   vb.gui = true
  #
  #   # Customize the amount of memory on the VM:
  #   vb.memory = "1024"
  # end
  #
  # View the documentation for the provider you are using for more
  # information on available options.

  # Define a Vagrant Push strategy for pushing to Atlas. Other push strategies
  # such as FTP and Heroku are also available. See the documentation at
  # https://docs.vagrantup.com/v2/push/atlas.html for more information.
  # config.push.define "atlas" do |push|
  #   push.app = "YOUR_ATLAS_USERNAME/YOUR_APPLICATION_NAME"
  # end

  config.ssh.insert_key = true
  # try to set a different default user
    if VAGRANT_COMMAND == "ssh"
      config.ssh.username = 'travis'
      config.ssh.insert_key = true
    end

  # config.ssh.username = "travis"
  # config.ssh.insert_key = false

  # Enable provisioning with a shell script. Additional provisioners such as
  # Puppet, Chef, Ansible, Salt, and Docker are also available. Please see the
  # documentation for more information about their specific syntax and use.
  config.vm.provision "shell", inline: <<-SHELL
    useradd -m -s /bin/bash travis
    usermod -a -G vagrant travis
    echo -e "travis\ntravis\n" | sudo passwd travis
    [ -d /home/travis/.ssh ] || sudo mkdir -p /home/travis/.ssh
    cp /home/vagrant/.ssh/authorized_keys /home/travis/.ssh/
    sudo chown -R travis:travis /home/travis
    sudo chmod 600 /home/travis/.ssh/authorized_keys
    sudo chown travis:travis /home/travis/.ssh/authorized_keys
    # sudo echo "AllowUsers travis" >> /etc/ssh/sshd_config
    # echo 'linuxbrew ALL=(ALL) NOPASSWD:ALL' >>/etc/sudoers # emulate no sudo on travis
    sudo apt-get update
    sudo apt-get update --fix-missing -y
    sudo apt-get install -y gawk build-essential ruby curl git jq python-pip python-setuptools
    unset LD_LIBRARY_PATH PKG_CONFIG_PATH
    echo 'sudo su -l travis' | cat >> /home/vagrant/.bash_profile
    echo 'export PATH="${HOME}/.linuxbrew/bin:$PATH"' | cat >> /home/travis/.bash_profile
    echo 'cd ${HOME}/build/sourceryinstitute/opencoarrays' | cat >> /home/travis/.bash_profile
  SHELL
end
