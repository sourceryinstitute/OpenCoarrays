sudo: false
language: cpp
os:
  - linux
  - osx
copmpiler:
  - gcc
matrix:
  exclude:
    - os: osx
      env: BUILD=Lint
addons:
  apt:
    sources:
      - ubuntu-toolchain-r-test
      - george-edison55-precise-backports
    packages:
      - gcc-5
      - gfortran-5
      - g++-5
      - cmake-data
      - cmake
      - binutils
cache:
  apt: true
  directories:
    - "$HOME/.cache"
env:
  matrix:
    - BUILD=CodeCoverage
    - BUILD=Release
    - BUILD=Release lMPI=OMPI
    - BUILD=Script  lMPI=NONE
    - BUILD=Lint    lMPI=NONE
  global:
    - CACHE="$HOME/.local"
    - MPICH_VER="3.1.4"
    - MPICH_URL_HEAD="http://www.mpich.org/static/downloads/$MPICH_VER"
    - MPICH_URL_TAIL="mpich-${MPICH_VER}.tar.gz"
    - MPICH_DIR="$HOME/.local/usr/mpich"
    - MPICH_BOT_URL_HEAD="https://github.com/sourceryinstitute/opencoarrays/files/64308/"
    - MPICH_BOT_URL_TAIL="mpich-3.2.yosemite.bottle.1.tar.gz"
before_install:
  - uname
  - true #.travis-scripts/set-env.sh # map travis-ci environment to saner variables
install:
  - true # .travis-scripts/install.$os.sh --build=$BUILD --lmpi=${lMPI:-MPICH}
script:
  - true # .travis-scripts/build.$os.sh --build=$BUILD --lmpi=${lMPI:-MPICH}
after_success:
  - find . -name '*.gcno' -print
  - gcov-5 --version
  - bash <(curl -s https://codecov.io/bash) -x $(which gcov-5)
  - cat install.log || true
after_failure:
  - cat install.log || true
notifications:
  webhooks:
    urls:
      # - https://webhooks.gitter.im/e/93dbafbdf76c1732a623
      - https://webhooks.gitter.im/e/935231573bf1b9f2fe40
      - secure: Vg9emW6xdaDsNkVyg0uykqFZPvVBbqOJqmuSSU5WwVS+vYO0am/du33q2FRe2bzJ7kKayl2udgdmnPTYxX3wDVfvzjE6AHG5zVdaESCorU1LiThaWHhgKGciyJDJbbZpkl6Ekp6qgf6Uvq0xYKiEbTgLMVaSMG5HtP3e/AB5vgf4QOHvLB7Ph5EhkhzrX52MaA00OganuWr2aZ089VEVugeGFcoBAs/Ndl08b67NQTiAFeQaUqY0Vaqn6b9Izgj1tJkB5FCgD0zZ0tTWPr+J73y4cmCXB8hpnt4d3v6z/CMPU8NivJy3KuRw2kI6K3rH1eoIPv4TfLUqyoQMCebT+2x+R9pAnZdwfJQGX18OXyjKlQrzlEIKXpo/aXWSyY7GZDpFGKLKMAozsdOf/cB5o+VZtw+HdoZIuHHTLoLVnnYBOAr7bpSlKyWY8eJnJZ6swvoT8mIFMMRrYHqxHDFfz1UFIwGV1wPp97sY6ejxWZ1tNTC7FxJan9EaxR9MqmSAyOl1oRDOEU+HKhgsnVTTtmpsWQlISJtyx1a7/24rdpQviaBwFJG7lQXCK4eWgASTbga4y2n5VY2MHzbqJyQnx68/NNhtB8OomPaS3kDlu6FmdQdOmnZHjawsSHDpe3WtZm/7doD3Od/4S8L5z6Lxj7DJod4pUtz873P/5sXgVKQ=
    on_success: change  # options: [always|never|change]
    on_failure: always
    on_start: always
# matrix:
#   include:
#     - os: osx
#       env:
#         - BUILD_TYPE="CodeCoverage"
#           OSX_PACKAGES="gcc cmake"
#     - os: osx
#       env:
#        - BUILD_TYPE="Release"
#          OSX_PACKAGES="gcc cmake"
#     - os: osx
#       env:
#        - BUILD_TYPE="InstallScript"
#          OSX_PACKAGES="gcc"
#     - os: linux
#       sudo: false
#       env:
#         - BUILD_TYPE="CodeCoverage"
#       cache:
#         directories:
#           - "$CACHE"
#       addons:
#         apt:
#           sources:
#             - george-edison55-precise-backports
#             - ubuntu-toolchain-r-test
#           packages:
#             - gcc-5
#             - gfortran-5
#             - binutils
#             - cmake-data
#             - cmake
#     - os: linux
#       sudo: false
#       env:
#         - BUILD_TYPE="Release"
#       cache:
#         directories:
#           - "$CACHE"
#       addons:
#         apt:
#           sources:
#             - george-edison55-precise-backports
#             - ubuntu-toolchain-r-test
#           packages:
#             - gcc-5
#             - gfortran-5
#             - binutils
#             - cmake-data
#             - cmake
#     - os: linux
#       sudo: false
#       env:
#         - BUILD_TYPE="InstallScript"
#       addons:
#         apt:
#           sources:
#             - ubuntu-toolchain-r-test
#           packages:
#             - gcc-5
#             - gfortran-5

# before_install:
#   - |
#     if [[ $TRAVIS ]] && [[ "X$TRAVIS_OS_NAME" = "Xosx" ]]; then
#       export PATH="$PATH:$HOME/Library/Python/2.7/bin"
#     else
#       [[ -d "$CACHE/bin" ]] || mkdir -p "$CACHE/bin"
#       [[ -d "$MPICH_DIR" ]] || mkdir -p "$MPICH_DIR"
#       export PATH="$CACHE/bin:$PATH"
#       export FC=gfortran-5
#       export CC=gcc-5
#       $FC --version
#       $CC --version
#     fi

# install:
#   - |
#     if [[ $TRAVIS ]] && [[ "X$TRAVIS_OS_NAME" = "Xosx" ]]; then
#       brew update > /dev/null

#       for pkg in $OSX_PACKAGES; do
#         [[ "$(brew ls --versions $pkg)" ]] || brew install --force-bottle $pkg
#         brew outdated $pkg || brew upgrade --force-bottle $pkg
#       done
#       export FC=gfortran-5
#       export CC=gcc-5
#       if ! [[ "$(brew ls --versions mpich)" ]] && [[ "X$BUILD_TYPE" != "XInstallScript" ]]; then
#         wget ${MPICH_BOT_URL_HEAD}${MPICH_BOT_URL_TAIL}
#         brew install --force-bottle ${MPICH_BOT_URL_TAIL}
#         if ! [[ "$(brew ls --versions mpich)" ]]; then
#           brew install --force-bottle mpich
#         fi
#         mpif90 --version
#         mpicc --version
#         cmake --version
#         export FC=mpif90
#         export CC=mpicc
#       elif [[ "X$BUILD_TYPE" = "XInstallScript" ]]; then # uninstall some stuff if present
#         [[ "$(brew ls --versions cmake)" ]] && brew rm cmake || true
#         [[ "$(brew ls --versions mpich)" ]] && brew rm mpich || true
#         [[ "$(brew ls --versions openmpi)" ]] && brew rm openmpi || true
#       fi
#     elif [[ "X$BUILD_TYPE" != "XInstallScript" ]]; then # Ubuntu on Travis-CI, NOT testing install.sh
#       if ! ( [[ -x "$HOME/.local/bin/mpif90" ]] && [[ -x "$HOME/.local/bin/mpicc" ]] ); then
#         # mpich install not cached
#         # could use install_prerequisites/build instead...
#         wget "${MPICH_URL_HEAD}/${MPICH_URL_TAIL}"
#         mv "$MPICH_URL_TAIL" "$MPICH_DIR/.."
#         pushd "$MPICH_DIR/.."
#         tar -xzvf "$MPICH_URL_TAIL"
#         cd "${MPICH_URL_TAIL%.tar.gz}"
#         ./configure --prefix="$MPICH_DIR"
#         make -j 4
#         make install
#         popd
#         for f in "$MPICH_DIR/bin/"*; do
#           if [[ -x "$f" ]]; then
#             ln -fs "$f" "$HOME/.local/bin/${f##*/}" && "${f##*/}" --version
#           fi
#         done
#       fi
#       mpif90 --version
#       mpicc --version
#       cmake --version
#       export FC=mpif90
#       export CC=mpicc
#     fi

# script:
#   - |
#     if [[ "X$BUILD_TYPE" = "XInstallScript" ]]; then
#       export FC=gfortran-5
#       export CC=gcc-5
#       [[ -d "$HOME/opt" ]] || mkdir "$HOME/opt"
#       [[ -d "$HOME/bin" ]] || mkdir "$HOME/bin"
#       ln -fs "$(which gfortran-5)" "$HOME/bin/gfortran"
#       ln -fs "$(which gcc-5)" "$HOME/bin/gcc"
#       ln -fs "$(which g++-5)" "$HOME/bin/g++"
#       export PATH="$PATH:$HOME/bin"
#       yes | ./install.sh $HOME/opt/opencoarrays 4 > install.log &
#       install_sh_PID=$!
#       echo "install.log will be displayed after success or failure"
#       while ps -p $install_sh_PID > /dev/null; do
#         echo "Still working on installing opencoarrays and dependencies"
#         sleep 300 # prevent Travis-CI abort due to inactivity and excessive logging
#       done
#     else
#       mkdir cmake-build
#       cd cmake-build
#       cmake -DCMAKE_INSTALL_PREFIX:PATH="$HOME/OpenCoarrays" -DCMAKE_BUILD_TYPE="$BUILD_TYPE" ..
#       make -j 4
#       ctest --verbose
#       make install
#       cd ..
#     fi
