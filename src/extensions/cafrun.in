#!/usr/bin/env bash
#
# Coarray Fortran (CAF) Executable Launcher
#
# Copyright (c) 2015-2016, Sourcery, Inc.
# All rights reserved.
#
# Redistribution and use in source and binary forms, with or without
# modification, are permitted provided that the following conditions are met:
#     * Redistributions of source code must retain the above copyright
#       notice, this list of conditions and the following disclaimer.
#     * Redistributions in binary form must reproduce the above copyright
#       notice, this list of conditions and the following disclaimer in the
#       documentation and/or other materials provided with the distribution.
#     * Neither the name of the Sourcery, Inc., nor the
#       names of its contributors may be used to endorse or promote products
#       derived from this software without specific prior written permission.
#
# THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" AND
# ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED
# WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
# DISCLAIMED. IN NO EVENT SHALL SOURCERY, INC., BE LIABLE FOR ANY
# DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES
# (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
# LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND
# ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
# (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS
# SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.

# This script invokes the chosen Fortran compiler with the received command-line
# arguments.  Current assumptions:
#    1. The only argument is either an informational flag or a CAF executable
#       file.
#    2. The environment variable "FC" is used to determine the identity fo the Fortran compiler/linker.
#    3. If "FC" is empty, a default value of "mpifort" is used.


#---------------------
# Configured variables
#---------------------
#
# @PROJECT_VERSION@ @MPIEXEC@ @MPIEXEC_NUMPROC_FLAG@ @MPIEXEC_PREFLAGS@ @MPIEXEC_POSTFLAGS@
# @HAVE_FAILED_IMG@
#

caf_version='@PROJECT_VERSION@'
CAFRUN='@MPIEXEC@'
if [[ ${CAFRUN} == @*@ ]]; then
  CAFRUN=mpiexec
fi
have_failed_img=@HAVE_FAILED_IMG@
if [[ ${have_failed_img} == @*@ ]]; then
  have_failed_img=false
fi
numproc_flag='@MPIEXEC_NUMPROC_FLAG@'
if [[ ${numproc_flag} == @*@ ]]; then
  numproc_flag='-np'
fi
preflags='@MPIEXEC_PREFLAGS@'
if [[ ${preflags} == @*@ ]]; then
  preflags=''
fi
postflags='@MPIEXEC_POSTFLAGS@'
if [[ ${postflags} == @*@ ]]; then
  postflags=''
fi

usage() {
  cmd="$(basename "${0}")"
  echo ""
  echo " ${cmd} - Coarray Fortran executable launcher for OpenCoarrays"
  echo ""
  echo " Usage: ${cmd} [options] ..."
  echo ""
  echo " Options:"
  echo "   --help, -h               Show this help message"
  echo "   --version, -v, -V        Report version and copyright information"
  echo "   --wraps, -w,             Report the name of the wrapped compiler"
  echo "   -np <N>,                 Number of images, N, to execute, N must be a positive integer"
  echo "   --enable-failed-images   Turn on failed images support, if library support is present"
  echo ""
  echo " Example usage:"
  echo ""
  echo "   ${cmd} -np 2 foo foo_arg1 foo_arg2"
  echo "   ${cmd} -v"
  echo "   ${cmd} --help"
  echo "   ${cmd} --show"
  echo "   ${cmd} -s -np 4 my_exe"
  echo "   ${cmd} -np 4 --enable-failed-images ./my_exe arg1 arg2"
  echo ""
  echo " Notes:"
  echo "   [options] must be a CAF executable file, one of the above arguments,"
  echo "   or an argument to the program name returned by caf --wraps"
  echo ""
}

i=0
for arg in "${@}"; do
  ((i+=1))
  if [[ "${arg}" == "--enable-failed-images" ]]; then
    if ${have_failed_img}; then
      preflags=(-disable-auto-cleanup "${preflags[@]}")
    else
      echo "Warning, OpenCoarrays was not compiled with failed images support because" >&2
      echo "it was not requested, or unsupported by the MPI library." >&2
    fi
    # Strip "--enable-failed-images" from args
    set -- "${@:1:$((i - 1))}" "${@:$((i+1)):$((${#} - i))}"
  fi
done

# Print useage information if caf is invoked without arguments
if ((${#} == 0)); then
  usage
  exit 1
elif [[ "${1}" == -[vV] || "${1}" == '--version' ]]; then
  echo ""
  echo "OpenCoarrays Coarray Fortran Executable Launcher (caf version ${caf_version})"
  echo "Copyright (C) 2015-2016 Sourcery, Inc."
  echo ""
  echo "OpenCoarrays comes with NO WARRANTY, to the extent permitted by law."
  echo "You may redistribute copies of OpenCoarrays under the terms of the"
  echo "BSD 3-Clause License.  For more information about these matters, see"
  echo "the file named LICENSE."
  echo ""
elif [[ "${1}" == -w || "${1}" == --wraps ]]; then
  "${CAFRUN}" -v
elif [[ "${1}" == -h || "${1}" == --help ]]; then
  usage
elif [[ "${1}" == -s || "${1}" == --show ]]; then
  if ((${#} > 4)); then
    mpiexec_args=("${2:-${numproc_flag}}" "${3:-<number_of_images>}")
    if [[ "${preflags[*]:-}" ]]; then
      mpiexec_args+=("${preflags[@]}")
    fi
    mpiexec_args+=("${4:-/path/to/coarray_Fortran_program}")
    if [[ "${postflags[*]:-}" ]]; then
      mpiexec_args+=("${postflags[@]}")
    fi
    if [[ "${*:5:$((${#} - 4))}" ]]; then
      mpiexec_args+=("${@:5:$((${#} - 4))}")
    fi
    echo "${CAFRUN} ${mpiexec_args[*]}"
  else
    mpiexec_args=("${2:-${numproc_flag}}" "${3:-<number_of_images>}")
    if [[ "${preflags[*]:-}" ]]; then
      mpiexec_args+=("${preflags[@]}")
    fi
    mpiexec_args+=("${4:-/path/to/coarray_Fortran_program}")
    if [[ "${postflags[*]:-}" ]]; then
      mpiexec_args+=("${postflags[@]}")
    fi
    mpiexec_args+=("[arg4 [arg5 [...]]]")
    echo "${CAFRUN} ${mpiexec_args[*]}"
  fi
elif [[ "${1}" == -np || "${1}" == -n ]]; then
  # shellcheck disable=SC1001
  if [[ "${2}" =~ ^[\-0-9]+$ ]] && (( ${2} > 0)) && ((${#} > 2)); then
    mpiexec_args=("${numproc_flag}" "${2}")
    if [[ "${preflags[*]:-}" ]]; then
      mpiexec_args+=("${preflags[@]}")
    fi
    mpiexec_args+=("${3}")
    if [[ "${postflags[*]:-}" ]]; then
      mpiexec_args+=("${postflags[@]}")
    fi
    if [[ "${*:4:$((${#} - 3))}" ]]; then
      mpiexec_args+=("${@:4:$((${#} - 3))}")
    fi

    "${CAFRUN}" "${mpiexec_args[@]}"
  else
    echo "You must pass \"-np\", \"<number_of_images>\", \"/path/to/coarray_Fortran_program\" as the first 3 arguments to ${cmd}."
    exit 1
  fi
fi
